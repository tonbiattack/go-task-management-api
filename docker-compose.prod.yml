# 本番環境用Docker Compose設定
version: '3.8'

services:
  # Goアプリケーション
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: task-management-api:${VERSION:-latest}
    container_name: task-management-api
    restart: unless-stopped
    ports:
      - "${APP_PORT:-8080}:8080"
    environment:
      - DB_HOST=${DB_HOST:-mysql}
      - DB_PORT=${DB_PORT:-3306}
      - DB_USER=${DB_USER:-appuser}
      - DB_PASSWORD_FILE=/run/secrets/db_password
      - DB_NAME=${DB_NAME:-task_management}
      - ENV=production
      - TZ=${TZ:-Asia/Tokyo}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    secrets:
      - db_password
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    volumes:
      - app_logs:/app/logs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${DOMAIN:-localhost}`)"
      - "traefik.http.services.api.loadbalancer.server.port=8080"

  # MySQL データベース
  mysql:
    image: mysql:8.0
    container_name: task-management-mysql
    restart: unless-stopped
    ports:
      - "${MYSQL_PORT:-3307}:3306"
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_DATABASE: ${DB_NAME:-task_management}
      MYSQL_USER: ${DB_USER:-appuser}
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    secrets:
      - mysql_root_password
      - mysql_password
    volumes:
      - mysql_data:/var/lib/mysql
      - mysql_logs:/var/log/mysql
      - ./backup:/backup:ro
      - ./pkg/config/db:/docker-entrypoint-initdb.d:ro
    networks:
      - app-network
    command: >
      mysqld 
      --character-set-server=utf8mb4 
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
      --bind-address=0.0.0.0
      --max_connections=200
      --innodb_buffer_pool_size=256M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$(cat /run/secrets/mysql_root_password)"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '1.0'
          memory: 512M

  # リバースプロキシ（オプション）
  nginx:
    image: nginx:alpine
    container_name: task-management-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - app-network
    depends_on:
      - app
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M

# Docker Secrets（本番環境での機密情報管理）
secrets:
  db_password:
    external: true
    name: task_management_db_password
  mysql_root_password:
    external: true
    name: task_management_mysql_root_password
  mysql_password:
    external: true
    name: task_management_mysql_password

# 永続化ボリューム
volumes:
  mysql_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}/mysql
  mysql_logs:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local

# ネットワーク設定
networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16