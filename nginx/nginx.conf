# 本番環境用Nginx設定
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ログ形式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # パフォーマンス設定
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip圧縮
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # セキュリティヘッダー
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";

    # アップストリーム設定
    upstream api {
        server app:8080;
        keepalive 32;
    }

    # レート制限
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

    # HTTP -> HTTPS リダイレクト（SSL設定時）
    # server {
    #     listen 80;
    #     server_name your-domain.com;
    #     return 301 https://$server_name$request_uri;
    # }

    # メインサーバー設定
    server {
        listen 80;
        server_name localhost;

        # SSL設定（必要に応じてコメントアウト）
        # listen 443 ssl http2;
        # ssl_certificate /etc/nginx/ssl/cert.pem;
        # ssl_certificate_key /etc/nginx/ssl/key.pem;
        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_ciphers HIGH:!aNULL:!MD5;

        # ルートアクセス
        location / {
            return 200 'Task Management API is running';
            add_header Content-Type text/plain;
        }

        # API プロキシ
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # タイムアウト設定
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Keep-Alive設定
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # ヘルスチェック
        location /health {
            proxy_pass http://api/health;
            proxy_set_header Host $host;
            access_log off;
        }

        # メトリクス（認証必要）
        location /metrics {
            allow 127.0.0.1;
            allow 172.20.0.0/16;  # Docker network
            deny all;
            
            proxy_pass http://api/metrics;
            proxy_set_header Host $host;
        }

        # エラーページ
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # 管理用サーバー（内部アクセスのみ）
    server {
        listen 8081;
        server_name localhost;
        
        allow 127.0.0.1;
        allow 172.20.0.0/16;  # Docker network
        deny all;

        # Nginx ステータス
        location /nginx_status {
            stub_status on;
            access_log off;
        }

        # アプリケーションメトリクス
        location /app_status {
            proxy_pass http://api/debug/vars;
            proxy_set_header Host $host;
        }
    }
}